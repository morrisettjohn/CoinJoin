/// <reference types="bn.js" />
import { BN } from 'avalanche';
import { ChainIdType } from "../types";
declare type UniversalTxActionTypesX = 'send_x' | 'export_x_c' | 'export_x_P';
declare type UniversalTxActionTypesC = 'send_c' | 'export_c_x';
declare type UniversalTxActionTypesP = 'export_p_x';
declare type UniversalTxActionType = UniversalTxActionTypesX | UniversalTxActionTypesC | UniversalTxActionTypesP;
interface UniversalTx {
    action: UniversalTxActionType;
    amount: BN;
}
/**
 * Returns what transactions are needed to have the given AVAX balance on the given chain.
 * @param balX current balance of the X chain in nAVAX
 * @param balP current balance of the P chain in nAVAX
 * @param balC current balance of the C chain in nAVAX
 * @param targetChain One of the primary chain.
 * @param targetAmount Desired amount on the `targetChain`
 */
export declare function getStepsForTargetAvaxBalance(balX: BN, balP: BN, balC: BN, targetAmount: BN, targetChain: ChainIdType): UniversalTx[];
export {};
